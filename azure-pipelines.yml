resources:
- repo: self
  fetchDepth: 1
  submodules: true

trigger:
- main
- develop

variables:
  TargetFramework: 'net6.0'
  BuildConfiguration: 'Release'
  DockerImageName: 'rpm-2023/rpmapp/rpmapi'
  projPath: '$(Build.SourcesDirectory)/BackEnd-RPM/RPM.Api'
  docsSrcPath: '$(Build.SourcesDirectory)/SDTeam-Docs'
  vmImageName: 'ubuntu-latest'
  ${{ if eq(variables['Build.SourceBranchName'], 'main') }}:
    latestTag: "latest"
    tag: '$(Build.SourceBranchName)-$(Build.BuildId)'
    openApiServerUrl: "gw.cloudmt.co.kr/rpm"
  ${{ if eq(variables['Build.SourceBranchName'], 'develop') }}:
    latestTag: "develop"
    tag: '$(Build.SourceBranchName)-$(Build.BuildId)'
    openApiServerUrl: "dev.gw.cloudmt.co.kr/rpm"

stages:
  - stage: Build
    displayName: Build and push stage
    jobs:
    - job: Build
      displayName: Build
      pool:
        vmImage: $(vmImageName)
      steps:
        - task: PublishBuildArtifacts@1
          displayName: 'Publish Artifact'
          inputs:
            PathtoPublish: $(System.DefaultWorkingDirectory)
        - task: Docker@2
          displayName: 'Login to Container Registry'
          inputs:
            command: login
            containerRegistry: 'rpm_container'
        - task: Docker@2
          displayName: 'Build and push image'
          inputs:
            Dockerfile: 'Dockerfile'
            command: buildAndPush
            repository: '$(DockerImageName)'
            tags: |
              $(latestTag)
              $(tag)
    - job: Docs
      displayName: Docs
      pool:
        vmImage: $(vmImageName)
      steps:
        - checkout: self
        - checkout: git://SDTeam-Project/SDTeam-Docs
          persistCredentials: true
          clean: true
        - task: UseDotNet@2
          inputs:
            version: '6.x'
        - task: DotNetCoreCLI@2
          displayName: Restore dependencies
          inputs:
            command: 'restore'
            projects: '**/*.csproj'
            workingDirectory: $(projPath)
        - script: dotnet tool restore
          displayName: Restore Tools
          workingDirectory: $(projPath)
        - task: DotNetCoreCLI@2
          displayName: Build project
          inputs:
            command: 'build'
            projects: '**/RPM.Api.csproj'
            arguments: -c Release -o ./app/build
            workingDirectory: $(projPath)
        - script: dotnet swagger tofile --output ./openapi.json ./app/build/RPM.Api.dll v1
          displayName: Generate OpenAPI Doc file
          workingDirectory: $(projPath)
        - script: |
            sudo apt install -y jq
            cat ./openapi.json | jq --arg server_url $(openApiServerUrl) '. + {servers:[{url: $server_url}]}' > openapi1.json
            mv openapi1.json openapi.json
          displayName: Add Server URL to OpenAPI Doc
          workingDirectory: $(projPath)
        - script: |
            cp $(projPath)/openapi.json $(docsSrcPath)/content/ko/json/rpmapi-$(Build.SourceBranchName).json
            git config user.name "RPM API Pipeline"
            git config user.email "sdev@cloudmt.co.kr"
            git add content/ko/json/rpmapi-$(Build.SourceBranchName).json
            git commit -m "Update RPM API OpenAPI Doc - Build ID: $(Build.BuildId)"
            git push origin HEAD:main
          displayName: Copy and push OpenAPI Doc file
          workingDirectory: $(docsSrcPath)
